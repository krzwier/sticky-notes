{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","onType","e","searchText","target","value","props","onSearch","className","data-testid","onClick","this","addNote","placeholder","onChange","Component","defaultProps","Note","editTitle","id","note","newText","editDescription","deleteMe","deleteNote","type","title","description","key","doesMatchSearch","filterNotes","NotesList","notes","renderedNotes","filter","map","App","state","notesArray","Date","now","setState","noteId","noteArray","push","field","searchString","regEx","RegExp","match","notesString","localStorage","getItem","JSON","parse","stringify","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEMA,E,4MAOFC,OAAS,SAACC,GACN,IAAMC,EAAaD,EAAEE,OAAOC,MAC5B,EAAKC,MAAMC,SAASJ,I,4CAGxB,WACI,OACI,yBAAQK,UAAU,aAAaC,cAAY,SAA3C,UACI,oBAAID,UAAU,oBAAd,8BACA,wBAAOA,UAAU,uBAAjB,UACI,wBAAQA,UAAU,UAAUE,QAASC,KAAKL,MAAMM,QAAhD,wBACA,uBAAOJ,UAAU,SAASK,YAAY,yBAAyBR,MAAOM,KAAKL,MAAMH,WAAYM,cAAY,cAAcK,SAAUH,KAAKV,mB,GAlBrIc,aAAff,EACKgB,aAAe,CAClBJ,QAAS,KACTT,WAAY,GACZI,SAAU,IAqBHP,QCzBTiB,E,4MAcFC,UAAY,SAAChB,GACT,IACMiB,EAAK,EAAKb,MAAMc,KAAKD,GACrBE,EAAUnB,EAAEE,OAAOC,MACzB,EAAKC,MAAML,OAAOkB,EAHJ,QAGeE,I,EAGjCC,gBAAkB,SAACpB,GACf,IACMiB,EAAK,EAAKb,MAAMc,KAAKD,GACrBE,EAAUnB,EAAEE,OAAOC,MACzB,EAAKC,MAAML,OAAOkB,EAHJ,cAGeE,I,EAGjCE,SAAW,SAACrB,GACR,IAAMiB,EAAK,EAAKb,MAAMc,KAAKD,GAC3B,EAAKb,MAAMkB,WAAWL,I,4CAI1B,WACI,OACI,qBAAIX,UAAU,OAAOC,cAAY,OAAjC,UACI,uBAAOD,UAAU,cAAciB,KAAK,OAAOZ,YAAY,QAAQR,MAAOM,KAAKL,MAAMc,KAAKM,MAAOZ,SAAUH,KAAKO,UAAWT,cAAY,eACnI,0BAAUD,UAAU,oBAAoBK,YAAY,iBAAiBR,MAAOM,KAAKL,MAAMc,KAAKO,YAAab,SAAUH,KAAKW,gBAAiBb,cAAY,qBACrJ,sBAAMD,UAAU,eAAeC,cAAY,IAAIC,QAASC,KAAKY,SAA7D,sB,GAvCGR,aAAbE,EAEKD,aAAe,CAClBY,IAAK,EACLR,KAAM,CACFD,GAAI,EACJO,MAAO,GACPC,YAAa,GACbE,iBAAiB,GAErB5B,OAAQ,KACRuB,WAAY,MAkCLP,QC1CTa,EAAc,SAAAV,GAAI,OAAIA,EAAKS,iBA+BlBE,EA5BG,SAAC,GAWZ,IAAD,IAVFC,aAUE,MAVM,CACJ,CACIb,GAAI,EACJO,MAAO,GACPC,YAAa,GACbE,iBAAiB,IAKvB,MAFF5B,cAEE,MAFO,KAEP,MADFuB,kBACE,MADW,KACX,EAOIS,EADgBD,EAAME,OAAOJ,GACCK,KALjB,SAACf,GAAD,OACf,cAAC,EAAD,CAAMA,KAAMA,EAAoBnB,OAAQA,EAAQuB,WAAYA,GAArCJ,EAAKD,OAOhC,OACI,oBAAIX,UAAU,aAAaC,cAAY,YAAvC,SACKwB,KC1BPG,E,4MAgBFC,MAAQ,CACJL,MAAO,EAAK1B,MAAM0B,MAClB7B,WAAY,I,EAqBhBS,QAAU,WACN,IAMM0B,EAAU,CANA,CACZnB,GAAIoB,KAAKC,MACTd,MAAO,GACPC,YAAa,GACbE,iBAAiB,IAEL,mBAAgB,EAAKQ,MAAML,QAC3C,EAAKS,SAAS,CAAET,MAAOM,K,EAG3Bd,WAAa,SAACkB,GACV,IADqB,EACfC,EAAY,GADG,cAEJ,EAAKN,MAAML,OAFP,IAErB,2BAAmC,CAAC,IAA3BZ,EAA0B,QAC3BA,EAAKD,KAAOuB,GACZC,EAAUC,KAAKxB,IAJF,8BAOrB,EAAKqB,SAAS,CAACT,MAAOW,K,EAG1B1C,OAAS,SAACyC,EAAQG,EAAOxB,GACrB,IAUMsB,EAAY,EAAKN,MAAML,MAAMG,KAVhB,SAACf,GAQhB,OAPIA,EAAKD,KAAOuB,IACE,UAAVG,EACAzB,EAAKM,MAAQL,EAEbD,EAAKO,YAAcN,GAGpBD,KAGX,EAAKqB,SAAS,CAACT,MAAOW,K,EAG1BpC,SAAW,SAACuC,GACR,EAAKL,SAAS,CAACtC,WAAY2C,IAC3B,IAUMC,EAAQ,IAAIC,OAAOF,EAAc,KACjCH,EAAY,EAAKN,MAAML,MAAMG,KAXR,SAACf,GAQxB,OAPIA,EAAKM,MAAMuB,MAAMF,IACjB3B,EAAKO,YAAYsB,MAAMF,GACnB3B,EAAKS,iBAAkB,EAG3BT,EAAKS,iBAAkB,EAEpBT,KAIX,EAAKqB,SAAS,CAACT,MAAOW,K,uDAlE1B,WACI,IAAMO,EAAcC,aAAaC,QAAQ,SACzC,GAAIF,EAAa,CACb,IAAMlB,EAAQqB,KAAKC,MAAMJ,GACzBvC,KAAK8B,SAAS,CAACT,MAAOA,O,gCAK9B,WACI,IAAMkB,EAAcG,KAAKE,UAAU5C,KAAK0B,MAAML,OAC9CmB,aAAaK,QAAQ,QAASN,K,oBA0DlC,WACI,OACI,sBAAK1C,UAAU,MAAf,UACI,cAAC,EAAD,CAAQL,WAAYQ,KAAK0B,MAAMlC,WAAYS,QAASD,KAAKC,QAASL,SAAUI,KAAKJ,WACjF,cAAC,EAAD,CAAWyB,MAAOrB,KAAK0B,MAAML,MAAO/B,OAAQU,KAAKV,OAAQuB,WAAYb,KAAKa,oB,GAhGxET,aAAZqB,EAGKpB,aAAe,CAClBgB,MAAO,CACH,CACIb,GAAI,EACJO,MAAO,GACPC,YAAa,GACbE,iBAAiB,KA8FlBO,QChGAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4f1720b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n    static defaultProps = {\n        addNote: null,\n        searchText: \"\",\n        onSearch: \"\"\n    };\n\n    onType = (e) => {\n        const searchText = e.target.value;\n        this.props.onSearch(searchText);\n    }\n\n    render() {\n        return (\n            <header className=\"app-header\" data-testid=\"Header\">\n                <h1 className=\"app-header__title\">all the stickies</h1>\n                <aside className=\"app-header__controls\">\n                    <button className=\"add-new\" onClick={this.props.addNote}>+ New Note</button>\n                    <input className=\"search\" placeholder=\"Type here to search...\" value={this.props.searchText} data-testid=\"searchInput\" onChange={this.onType} />\n                </aside>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\nclass Note extends Component {\n\n    static defaultProps = {\n        key: 0,\n        note: {\n            id: 0,\n            title: \"\",\n            description: \"\",\n            doesMatchSearch: true\n        },\n        onType: null,\n        deleteNote: null\n    };\n\n    editTitle = (e) => {\n        const field = \"title\";\n        const id = this.props.note.id;\n        const newText = e.target.value;\n        this.props.onType(id, field, newText);\n    }\n\n    editDescription = (e) => {\n        const field = \"description\";\n        const id = this.props.note.id;\n        const newText = e.target.value;\n        this.props.onType(id, field, newText);\n    }\n\n    deleteMe = (e) => {\n        const id = this.props.note.id;\n        this.props.deleteNote(id);\n    }\n\n\n    render() {\n        return (\n            <li className=\"note\" data-testid=\"Note\">\n                <input className=\"note__title\" type=\"text\" placeholder=\"Title\" value={this.props.note.title} onChange={this.editTitle} data-testid=\"titleInput\" />\n                <textarea className=\"note__description\" placeholder=\"Description...\" value={this.props.note.description} onChange={this.editDescription} data-testid=\"descriptionInput\" />\n                <span className=\"note__delete\" data-testid=\"x\" onClick={this.deleteMe}>X</span>\n            </li>\n        );\n    }\n}\n\nexport default Note;","import React from \"react\";\nimport Note from \"./Note\";\n\n\n\nconst filterNotes = note => note.doesMatchSearch;\n\n\nconst NotesList = ({\n    notes = [\n        {\n            id: 0,\n            title: \"\",\n            description: \"\",\n            doesMatchSearch: true\n        }\n    ],\n    onType = null,\n    deleteNote = null\n}) => {\n\n    const renderNote = (note) => (\n        <Note note={note} key={note.id} onType={onType} deleteNote={deleteNote} />\n    );\n\n    const filteredNotes = notes.filter(filterNotes)\n    const renderedNotes = filteredNotes.map(renderNote);\n\n\n    return (\n        <ul className=\"notes-list\" data-testid=\"NotesList\">\n            {renderedNotes}\n        </ul>\n    )\n}\n\nexport default NotesList;","import React, { Component } from \"react\";\nimport './App.css';\nimport Header from './Header.js';\nimport NotesList from './NotesList';\n\nclass App extends Component {\n\n    /**** PROPS ****/\n    static defaultProps = {\n        notes: [\n            {\n                id: 0,\n                title: \"\",\n                description: \"\",\n                doesMatchSearch: true,\n            }\n        ]\n    };\n\n    /**** STATE ****/\n\n    state = {\n        notes: this.props.notes,\n        searchText: \"\"\n    };\n\n    /**** LIFECYCLE METHODS ****/\n\n    componentDidMount() {\n        const notesString = localStorage.getItem('notes');\n        if (notesString) {\n            const notes = JSON.parse(notesString);\n            this.setState({notes: notes});\n        }\n        \n    }\n\n    componentDidUpdate() {\n        const notesString = JSON.stringify(this.state.notes);\n        localStorage.setItem(\"notes\", notesString);\n    }\n\n    /**** EVENT HANDLERS ****/\n\n    addNote = () => {\n        const newNote = {\n            id: Date.now(),\n            title: \"\",\n            description: \"\",\n            doesMatchSearch: true,\n        }\n        const notesArray = [newNote, ...this.state.notes];\n        this.setState({ notes: notesArray });\n    }\n\n    deleteNote = (noteId) => {\n        const noteArray = [];\n        for (let note of this.state.notes) {\n            if (note.id !== noteId) {\n                noteArray.push(note);\n            }\n        }\n        this.setState({notes: noteArray});\n    }\n\n    onType = (noteId, field, newText) => {\n        const updateNote = (note) => {\n            if (note.id === noteId) {\n                if (field === \"title\") {\n                    note.title = newText;\n                } else {\n                    note.description = newText;\n                }\n            }\n            return note;\n        }\n        const noteArray = this.state.notes.map(updateNote);\n        this.setState({notes: noteArray});\n    }\n\n    onSearch = (searchString) => {\n        this.setState({searchText: searchString});\n        const updateMatchBoolean = (note) => {\n            if (note.title.match(regEx) ||\n                note.description.match(regEx)) {\n                    note.doesMatchSearch = true;\n                }\n            else {\n                note.doesMatchSearch = false;\n            }\n            return note;\n        }\n        const regEx = new RegExp(searchString, 'i');\n        const noteArray = this.state.notes.map(updateMatchBoolean);\n        this.setState({notes: noteArray});\n    }\n    \n    render() {\n        return (\n            <div className=\"App\">\n                <Header searchText={this.state.searchText} addNote={this.addNote} onSearch={this.onSearch} />\n                <NotesList notes={this.state.notes} onType={this.onType} deleteNote={this.deleteNote}/>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}