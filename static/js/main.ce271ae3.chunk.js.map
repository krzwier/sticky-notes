{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","placeholder","value","searchText","Note","type","note","title","description","renderNote","id","filterNotes","doesMatchSearch","NotesList","renderedNotes","notes","filter","map","App","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAceA,MAZf,SAAiBC,GACb,OACI,yBAAQC,UAAU,aAAlB,UACQ,oBAAIA,UAAU,oBAAd,8BACA,wBAAOA,UAAU,uBAAjB,UACI,wBAAQA,UAAU,UAAlB,wBACA,uBAAOA,UAAU,SAASC,YAAY,yBAAyBC,MAAOH,EAAMI,oBCIjFC,MAVf,SAAeL,GACX,OACI,qBAAIC,UAAU,OAAd,UACI,uBAAOA,UAAU,cAAcK,KAAK,OAAOJ,YAAY,QAAQC,MAAOH,EAAMO,KAAKC,QACjF,0BAAUP,UAAU,oBAAoBC,YAAY,iBAAiBC,MAAOH,EAAMO,KAAKE,cACvF,sBAAMR,UAAU,eAAhB,mBCJNS,EAAa,SAACH,GAAD,OACf,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKI,KAG1BC,EAAc,SAACL,GAAD,OAAWA,EAAKM,iBAerBC,EAZG,SAACd,GAEf,IACMe,EADgBf,EAAMgB,MAAMC,OAAOL,GACLM,IAAIR,GAExC,OACI,oBAAIT,UAAU,aAAd,SACKc,KCyBEI,E,4MAnCXC,MAAQ,CACJJ,MAAO,CACH,CACIL,GAAI,EACJH,MAAO,MACPC,YAAa,2BACbI,iBAAiB,GAErB,CACIF,GAAI,EACJH,MAAO,QACPC,YAAa,cACbI,iBAAiB,GAErB,CACIF,GAAI,EACJH,MAAO,OACPC,YAAa,sBACbI,iBAAiB,IAGzBT,WAAY,I,4CAGhB,WACI,OACI,sBAAKH,UAAU,MAAf,UACI,cAAC,EAAD,CAAQG,WAAYiB,KAAKD,MAAMhB,aAC/B,cAAC,EAAD,CAAWY,MAAOK,KAAKD,MAAMJ,e,GA9B3BM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ce271ae3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header (props) {\n    return (\n        <header className=\"app-header\">\n                <h1 className=\"app-header__title\">all the stickies</h1>\n                <aside className=\"app-header__controls\">\n                    <button className=\"add-new\">+ New Note</button>\n                    <input className=\"search\" placeholder=\"Type here to search...\" value={props.searchText} />\n                </aside>\n            </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Note (props) {\n    return (\n        <li className=\"note\">\n            <input className=\"note__title\" type=\"text\" placeholder=\"Title\" value={props.note.title} />\n            <textarea className=\"note__description\" placeholder=\"Description...\" value={props.note.description} />\n            <span className=\"note__delete\">X</span>\n        </li>\n    )\n}\n\nexport default Note;","import React from \"react\";\nimport Note from \"./Note\";\n\nconst renderNote = (note) => (\n    <Note note={note} key={note.id} />\n);\n\nconst filterNotes = (note) => (note.doesMatchSearch);\n\n\nconst NotesList = (props) => {\n\n    const filteredNotes = props.notes.filter(filterNotes)\n    const renderedNotes = filteredNotes.map(renderNote);\n\n    return (\n        <ul className=\"notes-list\">\n            {renderedNotes}\n        </ul>\n    )\n}\n\nexport default NotesList;","import React, { Component } from \"react\";\nimport './App.css';\nimport Header from './Header.js';\nimport NotesList from './NotesList';\n\nclass App extends Component {\n\n    state = {\n        notes: [\n            {\n                id: 0,\n                title: \"eat\",\n                description: \"reese peanut butter cups\",\n                doesMatchSearch: true\n            },\n            {\n                id: 1,\n                title: \"sleep\",\n                description: \"eight hours\",\n                doesMatchSearch: true\n            },\n            {\n                id: 2,\n                title: \"code\",\n                description: \"build an awesome ui\",\n                doesMatchSearch: true\n            }\n        ],\n        searchText: \"\"\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header searchText={this.state.searchText}/>\n                <NotesList notes={this.state.notes}/>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}